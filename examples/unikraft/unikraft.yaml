prams:
  - name: TEST
    type: string
    only: ["Hello"]

inputs:
  - source: firecracker_config.json
    destination: /root/firecracker_config.json
  - source: firecracker_uk.config
    destination: /root/firecracker_uk.config
  - source: firecracker.patch
    destination: /root/firecracker.patch
  - source: hello.patch
    destination: /root/hello.patch
  - source: solo5.patch
    destination: /root/solo5.patch
  - source: /etc/resolv.conf
    destination: /etc/resolv.conf
  - source: /etc/environment
    destination: /etc/environment

outputs:
  - path: /results.txt

runs:
  - name: run
    image: hlefeuvre/unikraft
    cores: 1
    devices:
      - /dev/kvm
      - /dev/net/tun
    capabilities:
      - CAP_NET_ADMIN
    cmd:
      |
      set -xe
      for env in $( cat /etc/environment ); do \
        export $(echo $env | sed -e 's/"//g'); \
      done

      touch /results.txt

      apt update && apt install -y time qemu-utils

      # patch helloworld application
      cd  /root/.unikraft/app/helloworld
      git apply --ignore-space-change /root/hello.patch

      # patch solo5 platform
      kraft list pull plat/solo5
      cd ../../plats/solo5/
      git checkout 51213c68c03208b547bfc23d02022de87cbbb696
      git apply /root/solo5.patch
      cd ../../apps/helloworld

      # enable solo5 platform
      echo "CONFIG_PLAT_SOLO5=y" >> .config
      echo "CONFIG_SOLO5_HVT_TENDER=y" >> .config

      # build both KVM and solo5
      make

      # QEMU statistics using instrumented VMM
      echo "QEMU statistics: " > /results.txt
      script -c 'qemu-system-x86_64 -enable-kvm -nographic -nodefaults \
				-no-reboot -no-user-config -m 2M -kernel \
				build/helloworld_kvm-x86_64 \
				-cpu host,migratable=no,+invtsc' -f /tmp/out
      cat /tmp/out | grep "startup" >> /results.txt

      script -c '/usr/bin/time -f "QEMU maxRSS: %M" \
                         qemu-system-x86_64 -enable-kvm \
                                -nographic -nodefaults \
				-no-reboot -no-user-config -m 2M -kernel \
				build/helloworld_kvm-x86_64 \
				-cpu host,migratable=no,+invtsc' -f /tmp/out
      cat /tmp/out | grep "maxRSS: " >> /results.txt

      # solo5 statistics using instrumented VMM
      echo "solo5 statistics: " >> /results.txt
      script -c './build/solo5-hvt ./build/helloworld_solo5-x86_64' -f /tmp/out
      cat /tmp/out | grep "startup" >> /results.txt

      script -c '/usr/bin/time -f "solo5 maxRSS: %M" \
                    ./build/solo5-hvt ./build/helloworld_solo5-x86_64' -f /tmp/out
      cat /tmp/out | grep "maxRSS: " >> /results.txt

      # create firecracker disk image (not used, but seems to be required)
      qemu-img create -f raw /tmp/disk.img 1K

      # Create Firecracker FIFOs
      mkfifo /root/logs.fifo
      mkfifo /root/metrics.fifo

      # Add firecracker patch to Unikraft (not merged yet)
      cd ../../unikraft
      git checkout a4cf6565
      git apply /root/firecracker.patch
      cd ../apps/helloworld

      # enable firecracker and rebuild
      rm .config
      mv /root/firecracker_uk.config .config
      make properclean && make

      echo "firecracker statistics: " >> /results.txt
      cat log.fifo > /tmp/out 2>&1 &
      firecracker --config-file /root/firecracker_config.json --api-sock /tmp/firecracker.socket
      cat /tmp/out | grep "boot-time" >> /results.txt
      rm /tmp/firecracker.socket

      script -c '/usr/bin/time -f "firecracker maxRSS: %M" \
                    firecracker --config-file /root/firecracker_config.json \
				--api-sock /tmp/firecracker.socket' -f /tmp/out
      cat /tmp/out | grep "maxRSS: " >> /results.txt
