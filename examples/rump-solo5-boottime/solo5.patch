diff --git a/tenders/hvt/hvt_kvm_x86_64.c b/tenders/hvt/hvt_kvm_x86_64.c
index 4a5d148..06d70d2 100644
--- a/tenders/hvt/hvt_kvm_x86_64.c
+++ b/tenders/hvt/hvt_kvm_x86_64.c
@@ -37,6 +37,7 @@
 #include "hvt.h"
 #include "hvt_kvm.h"
 #include "hvt_cpu_x86_64.h"
+#include <time.h>
 
 void hvt_mem_size(size_t *mem_size) {
     hvt_x86_mem_size(mem_size);
@@ -146,11 +147,26 @@ void hvt_vcpu_init(struct hvt *hvt, hvt_gpa_t gpa_ep)
     hvt->cpu_boot_info_base = X86_BOOT_INFO_BASE;
 }
 
+struct timespec diff(struct timespec start, struct timespec end)
+{
+       struct timespec temp;
+       if ((end.tv_nsec-start.tv_nsec)<0) {
+               temp.tv_sec = end.tv_sec-start.tv_sec-1;
+               temp.tv_nsec = 1000000000+end.tv_nsec-start.tv_nsec;
+       } else {
+               temp.tv_sec = end.tv_sec-start.tv_sec;
+               temp.tv_nsec = end.tv_nsec-start.tv_nsec;
+       }
+       return temp;
+}
+
+struct timespec time1, time2, main_entry_time;
 int hvt_vcpu_loop(struct hvt *hvt)
 {
     struct hvt_b *hvb = hvt->b;
     int ret;
 
+    clock_gettime(CLOCK_PROCESS_CPUTIME_ID, &time1);
     while (1) {
         ret = ioctl(hvb->vcpufd, KVM_RUN, NULL);
         if (ret == -1 && errno == EINTR)
@@ -178,6 +194,17 @@ int hvt_vcpu_loop(struct hvt *hvt)
 
         switch (run->exit_reason) {
         case KVM_EXIT_IO: {
+            if (run->io.port == 200) {
+                clock_gettime(CLOCK_PROCESS_CPUTIME_ID, &time2);
+                errx(1, "solo5 startup: %lus, %luus (%lu ms)\n"
+                        "guest startup: %lus, %luus (%lu ms)\n",
+                        diff(main_entry_time, time1).tv_sec,
+                        diff(main_entry_time, time1).tv_nsec / 1000,
+                        diff(main_entry_time, time1).tv_nsec / 1000000,
+                        diff(time1, time2).tv_sec,
+                        diff(time1, time2).tv_nsec / 1000,
+                        diff(time1, time2).tv_nsec / 1000000);
+            }
             if (run->io.direction != KVM_EXIT_IO_OUT
                     || run->io.size != 4)
                 errx(1, "Invalid guest port access: port=0x%x", run->io.port);
diff --git a/tenders/hvt/hvt_main.c b/tenders/hvt/hvt_main.c
index a815c3c..5c7f333 100644
--- a/tenders/hvt/hvt_main.c
+++ b/tenders/hvt/hvt_main.c
@@ -135,8 +135,12 @@ static void version(const char *prog)
     exit(0);
 }
 
+#include <time.h>
+struct timespec main_entry_time;
+
 int main(int argc, char **argv)
 {
+    clock_gettime(CLOCK_PROCESS_CPUTIME_ID, &main_entry_time);
     size_t mem_size = 0x20000000;
     hvt_gpa_t gpa_ep, gpa_kend;
     const char *prog;
